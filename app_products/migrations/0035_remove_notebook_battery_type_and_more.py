# Generated by Django 4.1 on 2025-01-06 15:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app_reference_shared', '0022_audiodecoder_audiosystempower_hdmiversion_height_and_more'),
        ('app_notebook_reference', '0007_rename_notebookinterfacesconnectors_notebookinterfacesconnector'),
        ('app_tv_reference', '0001_initial'),
        ('app_products', '0034_notebook_name'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='notebook',
            name='battery_type',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='builtin_device',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='card_reader',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='case_coating',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='case_material',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='chipset',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='interface_connector',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='keyboard_colour',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='lightning_type',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='manual_input_device',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='manual_input_device_feature',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='nb_case_material',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='nb_colour',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='notebook_ram_type',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='power_supply_voltage',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='sound_config',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='ssd_form_factor',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='storage_type',
        ),
        migrations.RemoveField(
            model_name='notebook',
            name='wifi_type',
        ),
        migrations.CreateModel(
            name='TV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True)),
                ('video_url', models.URLField(blank=True)),
                ('image_1', models.URLField(blank=True)),
                ('image_2', models.URLField(blank=True)),
                ('image_3', models.URLField(blank=True)),
                ('image_4', models.URLField(blank=True)),
                ('image_5', models.URLField(blank=True)),
                ('audio_decoder', models.ManyToManyField(blank=True, to='app_reference_shared.audiodecoder')),
                ('audio_system_power', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.audiosystempower')),
                ('brand_tv', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.brandtv')),
                ('category_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.ozoncategory')),
                ('country_of_manufacture', models.ManyToManyField(blank=True, to='app_reference_shared.countryofmanufacture')),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.description')),
                ('hdmi_port', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.hdmiport')),
                ('hdmi_version', models.ManyToManyField(blank=True, to='app_reference_shared.hdmiversion')),
                ('height', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.height')),
                ('interior_tv_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.interiortvset')),
                ('life_span', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.lifespan')),
                ('media_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.mediaplayer')),
                ('model_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.modelname')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.name')),
                ('network', models.ManyToManyField(blank=True, to='app_reference_shared.network')),
                ('part_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.partnumber')),
                ('product_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.productset')),
                ('recording', models.ManyToManyField(blank=True, to='app_reference_shared.recording')),
                ('refresh_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.refreshrate')),
                ('resolution_standard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.resolutionstandard')),
                ('screen_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.screensize')),
                ('screen_technology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.screentechnology')),
                ('smart_tv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.smarttv')),
                ('subwoofer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.subwoofer')),
                ('support_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.supportsize')),
                ('tv_alternative_modes', models.ManyToManyField(blank=True, to='app_reference_shared.tvalternativemodes')),
                ('tv_colour', models.ManyToManyField(blank=True, to='app_tv_reference.tvcolour')),
                ('tv_control', models.ManyToManyField(blank=True, to='app_reference_shared.tvcontrol')),
                ('tv_curved_screen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.tvcurvedscreen')),
                ('tv_data_storag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.tvdatastorage')),
                ('tv_hdr_technology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.tvhdrtechnology')),
                ('tv_interface', models.ManyToManyField(blank=True, to='app_reference_shared.tvinterface')),
                ('tv_lightning_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.tvlightningtype')),
                ('tv_matrix_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.tvmatrixtype')),
                ('tv_operation_system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.tvoperationsystem')),
                ('tv_power_consumption', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.tvpowerconsumption')),
                ('tv_ram', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.tvram')),
                ('tv_resolution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.tvresolution')),
                ('tv_screen_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.tvscreensize')),
                ('tv_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.size')),
                ('tv_tuner', models.ManyToManyField(null=True, to='app_reference_shared.tvtuner')),
                ('tv_usb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_tv_reference.tvusb')),
                ('tv_weight', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.weight')),
                ('type_tv', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_tv_reference.typetv')),
                ('vesa_fixture', models.ManyToManyField(blank=True, to='app_reference_shared.vesafixture')),
                ('warranty_period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.warrantyperiod')),
                ('width', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_reference_shared.width')),
                ('wifi_frequency', models.ManyToManyField(blank=True, to='app_reference_shared.wififrequency')),
                ('wireless_interface', models.ManyToManyField(blank=True, to='app_reference_shared.wirelessinterface')),
            ],
        ),
        migrations.AddField(
            model_name='notebook',
            name='battery_type',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.batterytype'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='builtin_device',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.builtindevice'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='card_reader',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.cardreader'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='case_coating',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.casecoating'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='case_material',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.casematerial'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='chipset',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.chipset'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='interface_connector',
            field=models.ManyToManyField(blank=True, to='app_notebook_reference.notebookinterfacesconnector'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='keyboard_colour',
            field=models.ManyToManyField(blank=True, to='app_notebook_reference.keyboardcolour'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='lightning_type',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.lightningtype'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='manual_input_device',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.manualinputdevice'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='manual_input_device_feature',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.manualinputdevicefeature'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='nb_case_material',
            field=models.ManyToManyField(blank=True, to='app_notebook_reference.notebookcasematerial'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='nb_colour',
            field=models.ManyToManyField(blank=True, to='app_notebook_reference.notebookcolour'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='notebook_ram_type',
            field=models.ManyToManyField(blank=True, to='app_notebook_reference.notebookramtype'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='power_supply_voltage',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.powersupplyvoltage'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='sound_config',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.soundconfig'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='ssd_form_factor',
            field=models.ManyToManyField(blank=True, to='app_notebook_reference.ssdformfactor'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='storage_type',
            field=models.ManyToManyField(blank=True, to='app_notebook_reference.storagetype'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='wifi_type',
            field=models.ManyToManyField(blank=True, to='app_reference_shared.wifitype'),
        ),
    ]
